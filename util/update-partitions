#!/usr/bin/env python3

import argparse

# this is so this script can import from the lib directory
import os
import sys
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

from glutil import Partitioner, GlutilError

if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        formatter_class=argparse.RawDescriptionHelpFormatter,
        description="""
Update partition locations.

If the underlying location of the data is moved, and the table's location is updated to match, this script will attempt to match known partitions with partitions found in the new location, and update the corresponding partitions with new locations
"""
    )
    parser.add_argument(
        "database",
        type=str,
        default="",
        help="The Athena/Glue database containing the table you want to search for partitions")
    parser.add_argument(
        "table",
        type=str,
        help="The Athena/Glue table you want to search for partitions")
    parser.add_argument(
        "--dry-run",
        action="store_true",
        help="Perform a \"dry-run\", show the actions to be taken without actually performing them.")
    parser.add_argument("--profile", "-p", type=str, help="AWS profile to use")
    args = parser.parse_args()

    try:
        partitioner = Partitioner(args.database, args.table, args.profile)
    except GlutilError as e:
        print("Error:", e.message)
        sys.exit(1)

    partitioner.update_moved_partitions(dry_run=args.dry_run)
